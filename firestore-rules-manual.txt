// Copy and paste these updated rules into Firebase Console:
// https://console.firebase.google.com/project/clinicalscribe-511e7/firestore/rules

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- PROFILES ---
    // Each user can only manage their own profile.
    match /profiles/{uid} {
      allow read, update, delete: if request.auth != null
                                  && (resource.data.uid == request.auth.uid
                                      || get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.role == "admin");
      allow create: if request.auth != null
                    && request.resource.data.uid == request.auth.uid;
    }

    // --- PATIENTS ---
    // Only the owner (nurse) can manage their patients.
    match /patients/{patientId} {
      allow create: if request.auth != null
                    && request.resource.data.ownerId == request.auth.uid;
      allow read, update, delete: if request.auth != null
                                  && resource.data.ownerId == request.auth.uid;
    }

    // --- SOAP NOTES ---
    // Notes are linked to a user (author) and patient.
    // Support both 'uid' and 'userId' fields for backward compatibility
    match /soapNotes/{noteId} {
      allow create: if request.auth != null
                    && (request.resource.data.uid == request.auth.uid
                        || request.resource.data.userId == request.auth.uid)
                    && request.resource.data.createdAt != null;
      allow read, update, delete: if request.auth != null
                                  && (resource.data.uid == request.auth.uid
                                      || resource.data.userId == request.auth.uid);
    }

    // --- TRANSCRIPTS ---
    // Audio transcripts linked to a user
    match /transcripts/{transcriptId} {
      allow create: if request.auth != null
                    && (request.resource.data.uid == request.auth.uid
                        || request.resource.data.userId == request.auth.uid)
                    && request.resource.data.createdAt != null;
      allow read, update, delete: if request.auth != null
                                  && (resource.data.uid == request.auth.uid
                                      || resource.data.userId == request.auth.uid);
    }

    // --- REPORTS ---
    // Reports follow the same pattern as SOAP notes.
    // Support both 'uid' and 'userId' fields for backward compatibility
    match /reports/{reportId} {
      allow create: if request.auth != null
                    && (request.resource.data.uid == request.auth.uid
                        || request.resource.data.userId == request.auth.uid)
                    && request.resource.data.createdAt != null;
      allow read, update, delete: if request.auth != null
                                  && (resource.data.uid == request.auth.uid
                                      || resource.data.userId == request.auth.uid);
    }

    // --- ADMIN ---
    match /admin/{docId} {
      allow read, write: if request.auth != null
                         && get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.role == "admin";
    }
  }
}